name: Dart

on:
  # Run on PRs and pushes to the default branch.
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: "0 0 * * 0"

env:
  PUB_ENVIRONMENT: bot.github

permissions: read-all

jobs:
  analyze:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        sdk: [ dev ]
    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332
      - uses: dart-lang/setup-dart@0a8a0fc875eb934c15d08629302413c671d3f672
        with:
          sdk: ${{ matrix.sdk }}
      - id: install
        name: Install dependencies
        run: dart pub get
      - name: Check formatting
        run: dart format --output=none --set-exit-if-changed .
        if: always() && steps.install.outcome == 'success'
      - name: Analyze code
        run: dart analyze --fatal-infos
        if: always() && steps.install.outcome == 'success'

  test:
    needs: analyze
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        # Add macos-latest and/or windows-latest if relevant for this package.
        os: [ubuntu-latest]
        sdk: [3.4, dev]

    steps:
    - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332
    - uses: dart-lang/setup-dart@0a8a0fc875eb934c15d08629302413c671d3f672
      with:
        sdk: ${{ matrix.sdk }}
    - uses: nanasess/setup-chromedriver@42cc2998329f041de87dc3cfa33a930eacd57eaa

    - name: Install dependencies
      run:  dart pub get

    # Disabled; tracked via #75.
    - name: Run tests
      run: |
        export DISPLAY=:99
        chromedriver --port=4444 --url-base=/wd/hub &
        sudo Xvfb -ac :99 -screen 0 1280x1024x24 > /dev/null 2>&1 &
        dart test
      env:
        CHROMEDRIVER_ARGS: '--no-sandbox --headless'
